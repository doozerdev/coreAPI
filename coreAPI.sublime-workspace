{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"new",
				"new_item"
			],
			[
				"end",
				"end_time"
			],
			[
				"json",
				"json_response"
			],
			[
				"test",
				"test_item_id"
			],
			[
				"parent",
				"parent_id"
			],
			[
				"second",
				"second_item"
			],
			[
				"sed",
				"second_item"
			],
			[
				"secon",
				"second_item"
			],
			[
				"first",
				"first_item"
			],
			[
				"par",
				"parent"
			],
			[
				"due",
				"due_date"
			],
			[
				"se",
				"session_id"
			],
			[
				"newly_create",
				"newly_created_list_ids"
			],
			[
				"employ",
				"employee"
			],
			[
				"log",
				"log_lines"
			],
			[
				"is",
				"is_reviewer_for"
			],
			[
				"empl",
				"employee_review_id"
			],
			[
				"reviewer",
				"reviewer_id"
			],
			[
				"employee",
				"employee_review"
			],
			[
				"project",
				"project_reviews"
			],
			[
				"engage",
				"engagements"
			],
			[
				"pra",
				"params"
			],
			[
				"btn",
				"btn-primary"
			],
			[
				"en",
				"engagement_id"
			],
			[
				"proje",
				"project_review"
			],
			[
				"p",
				"project"
			],
			[
				"start",
				"start_period"
			],
			[
				"st",
				"start_period"
			],
			[
				"is_",
				"is_admin"
			],
			[
				"engagem",
				"engagements"
			],
			[
				"proj",
				"project_review"
			],
			[
				"pro",
				"project_review"
			],
			[
				"cu",
				"current_user"
			],
			[
				"user",
				"user_id"
			],
			[
				"form",
				"form-control"
			],
			[
				"show",
				"show_closed"
			],
			[
				"emp",
				"employee_review"
			],
			[
				"Emply",
				"EmployeeReview"
			],
			[
				"curr",
				"current_user"
			],
			[
				"style",
				"stylesheet_link_tag"
			],
			[
				"cur",
				"current_review"
			],
			[
				"currne",
				"current_user"
			],
			[
				"currr",
				"current_user"
			],
			[
				"html",
				"html_options"
			],
			[
				"bgc",
				"background-color"
			],
			[
				"review",
				"reviewer_overall_rating"
			],
			[
				"curre",
				"current_user"
			],
			[
				"Employ",
				"EmployeeReview"
			],
			[
				"emplo",
				"employee_reviews"
			],
			[
				"vulnera",
				"vulnerabilities"
			],
			[
				"fon",
				"font-family"
			],
			[
				"padding",
				"padding-right"
			],
			[
				"margin",
				"margin-right"
			],
			[
				"text-",
				"text-decoration"
			],
			[
				"padd",
				"padding"
			],
			[
				"fade",
				"fadeIn"
			],
			[
				"to",
				"to_i"
			],
			[
				"vulner",
				"vulnerability"
			],
			[
				"vulnerabilities",
				"vulnerabilities_path"
			],
			[
				"login",
				"login_path"
			],
			[
				"runnin",
				"running_exam_instances"
			],
			[
				"exam",
				"exam_is_starting"
			],
			[
				"has",
				"has_current_exam"
			],
			[
				"vuln",
				"vulnerability"
			],
			[
				"score",
				"high_score"
			],
			[
				"text",
				"text-align"
			],
			[
				"v",
				"vertical-align"
			],
			[
				"font",
				"font-style"
			],
			[
				"ba",
				"background-color"
			],
			[
				"ima",
				"image_id"
			],
			[
				"instance",
				"instance_id"
			],
			[
				"backgrou",
				"background-color"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"tex",
				"text-align"
			],
			[
				"rese",
				"rescue"
			],
			[
				"current",
				"current_user"
			],
			[
				"break",
				"break_timer"
			],
			[
				"url",
				"url"
			],
			[
				"ec2",
				"ec2_dns_name"
			],
			[
				"uni",
				"uniqueVulns"
			],
			[
				"instn",
				"instances"
			],
			[
				"image",
				"image_id"
			],
			[
				"has_",
				"has_many  (function)"
			],
			[
				"Product",
				"ProductID"
			],
			[
				"wi",
				"width"
			],
			[
				"com",
				"commentID"
			],
			[
				"Acc",
				"AccountTypes"
			],
			[
				"deskto",
				"desktopJoinedIds"
			],
			[
				"min",
				"min-width"
			],
			[
				"hex",
				"hex_crypt"
			],
			[
				"back",
				"background	background-image: url"
			],
			[
				"shado",
				"box-shadow"
			],
			[
				"try",
				"try	Try/Except"
			],
			[
				"e",
				"end-date"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/controllers/items_controller.rb",
			"settings":
			{
				"buffer_size": 3354,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "require \"rails_helper\"\nrequire \"spec_helper\"\n\nMongoMapper.connection = Mongo::Connection.new('127.0.0.1', 27017)\nMongoMapper.database = \"doozer_development\"\nMongoMapper.database.collections.each { |c| c.drop_indexes }\n\nRSpec.describe \"Lists API\" do\n\n  session_id = nil\n  admin_session_id = nil\n  new_list = Item.new(\n    :title => 'A New List',\n    :notes => 'Some Notes',\n    :duedate => DateTime.now,\n    :order => 1,\n    :done => false,\n    :archive => false\n  )\n  first_item = Item.new(\n    :title=>'The First Item for the List',\n    :notes=>'Some notes for the first item',\n    :duedate => DateTime.now,\n    :order => 1,\n    :done => false,\n    :archive => false\n  )\n  second_item = Item.new(\n    :title=>'The Second Item for the List',\n    :notes=>'Some notes for the second item',\n    :duedate => DateTime.now,\n    :order => 1,\n    :done => false,\n    :archive => false\n  )\n\n  before(:all) do\n    test_users = Koala::Facebook::TestUsers.new(:app_id => '1474823829455959', :secret => 'baa64757ee9417802e9f0605b42067f4').list\n\n    user = test_users.select{|user| user['id'] == '321638971355001'}.first\n    fb_oauth_token = user[\"access_token\"]\n    get \"/api/login/#{fb_oauth_token}\", {}, { \"Accept\" => \"application/json\" }\n    expect(response.status).to eq 201\n    session_id = JSON.parse(response.body)['session_id']\n    expect(session_id).to match(/[0-9a-f]{32}/)\n\n    admin = test_users.select{|admin| admin['id'] == '1546391385590451'}.first\n    fb_oauth_token = admin[\"access_token\"]\n    get \"/api/login/#{fb_oauth_token}\", {}, { \"Accept\" => \"application/json\" }\n    expect(response.status).to eq 201\n    json_response = JSON.parse(response.body)\n    expect(User.where(:uid => admin['id']).first.role).to eq 'admin'\n    admin_session_id = json_response['session_id']\n    expect(admin_session_id).to match(/[0-9a-f]{32}/)\n\n  end\n\n  describe \"POST /api/lists/create\" do\n    it \"create a new list\" do\n\n      post \"/api/items/create\", {\n        :title => new_list.title,\n        :notes => new_list.notes,\n        :duedate => new_list.duedate,\n        :order => new_list.order,\n        :done => new_list.done,\n        :archive => new_list.archive\n      },\n        {\"HTTP_SESSION_ID\" => session_id}\n\n      expect(response.status).to eq 201\n\n      item = JSON.parse(response.body)\n\n      compare(item, new_list)\n      new_list.id = item['id']\n      first_item.parent = new_list.id\n      second_item.parent = new_list.id\n    end\n  end\n\n  describe 'GET /api/lists/:id/show' do\n    it \"verifies the new list was created\" do\n      get \"/api/items/#{new_list.id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      list = JSON.parse(response.body)\n      compare(list, new_list)\n    end\n  end\n\n  describe 'POST /api/lists/create' do\n    it \"adds two items to the newly created list\" do\n\n      post \"/api/items/create\", {\n        :parent => first_item.parent,\n        :title => first_item.title,\n        :notes => first_item.notes,\n        :duedate => first_item.duedate,\n        :order => first_item.order,\n        :done => first_item.done,\n        :archive => first_item.archive\n      },\n        {\"HTTP_SESSION_ID\" => session_id}\n\n      expect(response.status).to eq 201\n\n      child = JSON.parse(response.body)\n      compare(child, first_item)\n      first_item.id = child['id']\n\n      post \"/api/items/create\", {\n        :parent => second_item.parent,\n        :title => second_item.title,\n        :notes => second_item.notes,\n        :duedate => second_item.duedate,\n        :order => second_item.order,\n        :done => second_item.done,\n        :archive => second_item.archive\n      },\n        {\"HTTP_SESSION_ID\" => session_id}\n\n      expect(response.status).to eq 201\n      child = JSON.parse(response.body)\n      compare(child, second_item)\n      second_item.id = child['id']\n    end\n  end\n\n  describe 'GET /api/lists/:id/show' do\n    it \"verifies the two items were created\" do\n      get \"/api/items/#{first_item.id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      list = JSON.parse(response.body)\n      compare(list, first_item)\n\n      get \"/api/items/#{second_item.id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      list = JSON.parse(response.body)\n      compare(list, second_item)\n    end\n  end\n\n  describe 'GET /api/lists/index' do\n    it \"retrieves all lists for test user\" do\n      get \"/api/items/index\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      items = JSON.parse(response.body)['items']\n\n      expect(items.select{|l| l['id'] == new_list.id.to_s}.count).to eq 1\n      list = items.select{|l| l['id'] == new_list.id.to_s}.first\n      compare(list, new_list)\n    end\n  end\n\n  describe 'GET /api/lists/:id/children' do\n    it \"retrieves all chilren nodes for the newly created list\" do\n      get \"/api/items/#{new_list.id}/children\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      children = JSON.parse(response.body)['items']\n      expect(children.count).to eq 2\n\n      compare(children[0], first_item)\n      compare(children[1], second_item)\n    end\n  end\n\n  describe 'PUT /api/lists/:id' do\n    it 'updates the list' do\n      new_list.title = \"#{new_list.title} - updated\"\n      new_list.notes = \"#{new_list.notes} - updated\"\n      new_list.duedate = DateTime.now\n      new_list.order = 2\n      new_list.done = true\n      new_list.archive = true\n\n      put \"/api/items/#{new_list.id}\", {\n        :title => new_list.title,\n        :notes => new_list.notes,\n        :duedate => new_list.duedate,\n        :order => new_list.order,\n        :done => new_list.done,\n        :archive => new_list.archive\n      }, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 202\n      item = JSON.parse(response.body)\n      compare(item, new_list)\n    end\n  end\n\n  describe 'GET /api/lists/:id/show' do\n    it \"verifies the list was properly updated\" do\n      get \"/api/items/#{new_list.id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      list = JSON.parse(response.body)\n      compare(list, new_list)\n    end\n  end\n\n  describe 'PUT /api/lists/:id' do\n    it 'updates the items in the list' do\n      first_item.title = \"#{first_item.title} - updated\"\n      first_item.notes = \"#{first_item.notes} - updated\"\n      first_item.duedate = DateTime.now\n      first_item.order = 2\n      first_item.done = true\n      first_item.archive = true\n\n      put \"/api/items/#{first_item.id}\", {\n        :parent => first_item.parent,\n        :title => first_item.title,\n        :notes => first_item.notes,\n        :duedate => first_item.duedate,\n        :order => first_item.order,\n        :done => first_item.done,\n        :archive => first_item.archive\n      }, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 202\n      item = JSON.parse(response.body)\n      compare(item, first_item)\n\n      second_item.title = \"#{second_item.title} - updated\"\n      second_item.notes = \"#{second_item.notes} - updated\"\n      second_item.duedate = DateTime.now\n      second_item.order = 2\n      second_item.done = true\n      second_item.archive = true\n\n      put \"/api/items/#{second_item.id}\", {\n        :parent => second_item.parent,\n        :title => second_item.title,\n        :notes => second_item.notes,\n        :duedate => second_item.duedate,\n        :order => second_item.order,\n        :done => second_item.done,\n        :archive => second_item.archive\n      }, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 202\n      item = JSON.parse(response.body)\n      compare(item, second_item)\n    end\n  end\n\n  describe 'GET /api/lists/:id/show' do\n    it \"verifies the two items were properly updated\" do\n      get \"/api/items/#{first_item.id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      list = JSON.parse(response.body)\n      compare(list, first_item)\n\n      get \"/api/items/#{second_item.id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      list = JSON.parse(response.body)\n      compare(list, second_item)\n    end\n  end\n\n  describe 'GET /api/lists/:term/search' do\n    it \"searchs through items\" do\n      get \"/api/items/title/search\", {}, {\"HTTP_SESSION_ID\" => admin_session_id}\n      expect(response.status).to eq 200\n      expect(JSON.parse(response.body)['count']).to be >= 1\n    end\n  end\n\n  describe 'DELETE /api/lists/:id' do\n    it \"deletes one item from the list\" do\n      delete \"/api/items/#{first_item.id}\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      delete_count = JSON.parse(response.body)['delete_item_count']\n      expect(delete_count).to eq 1\n    end\n  end\n\n  describe 'DELETE /api/lists/:id' do\n    it \"deletes the entire newly created list\" do\n      delete \"/api/items/#{new_list.id}\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      delete_count = JSON.parse(response.body)['delete_item_count']\n      expect(delete_count).to eq 2\n    end\n  end\n\n\n  ################################################\n  #Error Cases\n  ################################################\n\n  #does not exist item\n  dne_item_id = '123'\n  #does not own item\n  dno_item_id = '123'\n  # a test item we do own, so we can attempt to take over another list\n  test_item_id = nil\n\n  describe \"POST /api/lists/create\" do\n    it \"create a test item for ownership tests\" do\n      post \"/api/items/create\", {\n        :title => 'test item'\n        },{\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 201\n      item = JSON.parse(response.body)\n      expect(item['id']).to match(/[a-f0-9]{24}/)\n      test_item_id = item['id']\n    end\n  end  \n\n  describe \"POST /api/lists/create\" do\n    it \"attempts to create an item without a title\" do\n      post \"/api/items/create\", {},{\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 400\n      expect(JSON.parse(response.body)['error']).to eq 'title is required'\n    end\n  end\n\n  describe \"POST /api/lists/create\" do\n    it \"attempts to create an item with a parent we don't own\" do\n      post \"/api/items/create\", {\n        :title => 'A Parent I do not own',\n        :parent => dno_item_id\n      },\n        {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'parent not found'\n    end\n  end\n\n  describe 'PUT /api/lists/:id' do\n    it \"attempt to update an item we don't own\" do\n      put \"/api/items/#{dno_item_id}\", {\n        :title => 'title',\n        :notes => 'notes',\n        :duedate => DateTime.now,\n        :order => 123,\n        :done => true,\n        :archive => true\n      }, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'item not found'\n    end\n  end\n\n  describe 'PUT /api/lists/:id' do\n    it 'attempt to update an item that does not exist' do\n      put \"/api/items/#{dne_item_id}\", {\n        :title => 'title',\n        :notes => 'notes',\n        :duedate => DateTime.now,\n        :order => 123,\n        :done => true,\n        :archive => true\n      }, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'item not found'\n    end\n  end\n\ndescribe 'PUT /api/lists/:id' do\n    it \"attempt to update an item with a parent we don't own\" do\n      put \"/api/items/#{test_item_id}\", {\n        :title => 'title',\n        :parent => dno_item_id,\n        :notes => 'notes',\n        :duedate => DateTime.now,\n        :order => 123,\n        :done => true,\n        :archive => true\n      }, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'parent not found'\n    end\n  end\n\n  describe 'PUT /api/lists/:id' do\n    it \"attempt to update an item with a parent that does not exist\" do\n      put \"/api/items/#{test_item_id}\", {\n        :title => 'title',\n        :parent => dne_item_id,\n        :notes => 'notes',\n        :duedate => DateTime.now,\n        :order => 123,\n        :done => true,\n        :archive => true\n      }, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'parent not found'\n    end\n  end\n\n  describe \"GET /api/items/#{first_item.id}/show\" do\n    it \"attempts to view an item we don't own\" do\n      get \"/api/items/#{dno_item_id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'item not found'\n    end\n  end\n\n  describe \"GET /api/items/#{first_item.id}/show\" do\n    it \"attempts to view an item that does not exist\" do\n      get \"/api/items/#{dne_item_id}/show\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'item not found'\n    end\n  end\n\n  describe 'DELETE /api/lists/:id' do\n    it \"attempts to deletes an item that doesn't exist\" do\n      delete \"/api/items/#{dne_item_id}\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'item not found'\n    end\n  end\n\n  describe 'DELETE /api/lists/:id' do\n    it \"attempts to deletes an item that we don't own\" do\n      delete \"/api/items/#{dno_item_id}\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 404\n      expect(JSON.parse(response.body)['error']).to eq 'item not found'\n    end\n  end\n\n  describe 'DELETE /api/lists/:id' do\n    it \"delete the test item\" do\n      delete \"/api/items/#{test_item_id}\", {}, {\"HTTP_SESSION_ID\" => session_id}\n      expect(response.status).to eq 200\n      delete_count = JSON.parse(response.body)['delete_item_count']\n      expect(delete_count).to eq 1\n    end\n  end\n\n  #######################################################\n  # Helper functions\n  #######################################################\n\n  def compare(json_item, item)\n    expect(json_item['parent']).to eq item.parent if(item.parent)\n    expect(json_item['title']).to eq item.title if(item.title)\n    expect(json_item['notes']).to eq item.notes if(item.notes)\n    expect(DateTime.parse(json_item['duedate'])).to eq item.duedate if(item.duedate)\n    expect(json_item['archive']).to eq item.archive if(item.archive)\n    expect(json_item['done']).to eq item.done if(item.done)\n  end\n\nend\n",
			"file": "spec/requests/lists_spec.rb",
			"file_size": 14544,
			"file_write_time": 130647393000000000,
			"settings":
			{
				"buffer_size": 14544,
				"line_ending": "Unix"
			}
		},
		{
			"file": "spec/rails_helper.rb",
			"settings":
			{
				"buffer_size": 1806,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/models/user.rb",
			"settings":
			{
				"buffer_size": 1253,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/models/item.rb",
			"settings":
			{
				"buffer_size": 371,
				"line_ending": "Unix"
			}
		},
		{
			"file": "config/routes.rb",
			"settings":
			{
				"buffer_size": 2226,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/welcome/index.html",
			"settings":
			{
				"buffer_size": 25478,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dataGen/main.rb",
			"settings":
			{
				"buffer_size": 7582,
				"line_ending": "Unix"
			}
		},
		{
			"file": "dataGen/perf_test.rb",
			"settings":
			{
				"buffer_size": 4040,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/controllers/application_controller.rb",
			"settings":
			{
				"buffer_size": 209,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 47.0,
		"selected_items":
		[
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"upda",
				"Package Control: Upgrade Package"
			],
			[
				"",
				"BeautifyRuby"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"xml",
				"Indent XML"
			],
			[
				"inden",
				"Indent XML"
			],
			[
				"indent",
				"Indent XML"
			],
			[
				"sssq",
				"Set Syntax: SQL"
			],
			[
				"packaga",
				"Package Control: List Packages"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Package Control:",
				"Package Control: Discover Packages"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 330.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/joe/github/Doozer/coreAPI",
		"/Users/joe/github/Doozer/coreAPI/app",
		"/Users/joe/github/Doozer/coreAPI/app/assets",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts",
		"/Users/joe/github/Doozer/coreAPI/app/controllers",
		"/Users/joe/github/Doozer/coreAPI/app/views",
		"/Users/joe/github/Doozer/coreAPI/app/views/welcome",
		"/Users/joe/github/Doozer/coreAPI/config",
		"/Users/joe/github/Doozer/coreAPI/dataGen",
		"/Users/joe/github/Doozer/coreAPI/spec",
		"/Users/joe/github/Doozer/coreAPI/spec/requests",
		"/Users/joe/github/Doozer/coreAPI/vendor"
	],
	"file_history":
	[
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/lists.js",
		"/Users/joe/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/joe/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/joe/github/Doozer/coreAPI/app/controllers/base_api_controller.rb",
		"/Users/joe/github/Doozer/coreAPI/config/application.rb",
		"/Users/joe/github/Doozer/coreAPI/spec/requests/lists_spec.rb",
		"/Users/joe/github/Doozer/coreAPI/spec/requests/AuthN_spec.rb",
		"/Users/joe/github/Doozer/coreAPI/app/controllers/users_controller.rb",
		"/Users/joe/github/Doozer/coreAPI/app/views/welcome/index.html",
		"/Users/joe/github/Doozer/coreAPI/config/routes.rb",
		"/Users/joe/github/Doozer/coreAPI/app/controllers/items_controller.rb",
		"/Users/joe/Library/Application Support/Sublime Text 3/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/Users/joe/github/Doozer/coreAPI/app/models/user.rb",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/users.js",
		"/Users/joe/github/Doozer/coreAPI/spec/rails_helper.rb",
		"/Users/joe/github/Doozer/coreAPI/spec/spec_helper.rb",
		"/Users/joe/github/Doozer/coreAPI/dataGen/main.rb",
		"/Users/joe/github/Doozer/coreAPI/Gemfile",
		"/Users/joe/github/Doozer/coreAPI/.rspec",
		"/Users/joe/github/Doozer/coreAPI/app/models/item.rb",
		"/Users/joe/github/Doozer/coreAPI/app/controllers/sessions_controller.rb",
		"/Users/joe/github/Doozer/coreAPI/dataGen/api.rb",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/authentication.js",
		"/Users/joe/github/Doozer/coreAPI/app/views/layouts/application.html.erb",
		"/Users/joe/github/Doozer/coreAPI/spec/requests/login_spec.rb",
		"/Users/joe/github/Doozer/coreAPI/spec/controllers/login_spec.rb",
		"/Users/joe/github/Doozer/coreAPI/bin/spring",
		"/Users/joe/github/Doozer/coreAPI/.gitignore",
		"/Users/joe/github/Doozer/coreAPI/config/initializers/session_store.rb",
		"/Users/joe/github/Doozer/coreAPI/config/initializers/to_bool_monkey_patch.rb",
		"/Users/joe/github/Doozer/coreAPI/app/assets/stylesheets/bootstrap.css",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/application.js",
		"/Users/joe/github/Doozer/coreAPI/app/assets/stylesheets/bootstrap-theme.css",
		"/Users/joe/github/Doozer/coreAPI/log/development.log",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/jquery.js",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/jquery.cookie.js",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/get_lists.js",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/login.js",
		"/Users/joe/github/Doozer/coreAPI/app/assets/javascripts/logout.js",
		"/Users/joe/github/Doozer/coreAPI/app/controllers/application_controller.rb",
		"/Users/joe/github/Doozer/coreAPI/app/controllers/item_controller.rb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/index.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/_employee_review_template_short.html.erb",
		"/Users/jbasirico/github/whetstone/Gemfile",
		"/Users/jbasirico/Desktop/TeamComs.txt",
		"/Users/jbasirico/github/whetstone/app/views/users/show.html.erb",
		"/Users/jbasirico/github/whetstone/config/config.yml",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/to_review.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_legacy_short.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/show.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_okr_short.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_okr_form.html.erb",
		"/Users/jbasirico/github/whetstone/app/assets/javascripts/application.js",
		"/Users/jbasirico/github/whetstone/app/assets/javascripts/project_reviews.js.coffee",
		"/Users/jbasirico/github/whetstone/app/assets/stylesheets/scaffolds.css.scss",
		"/Users/jbasirico/github/whetstone/app/assets/javascripts/jquery.remember-state.js",
		"/Users/jbasirico/Downloads/markdown-browser-0.6.0-beta1/default.html",
		"/Users/jbasirico/github/whetstone/app/views/project_reviews/review.html.erb",
		"/Users/jbasirico/github/whetstone/app/assets/stylesheets/project_reviews.css.scss",
		"/Users/jbasirico/Downloads/markdown-js-master/default.html",
		"/Users/jbasirico/github/whetstone/app/assets/stylesheets/application.css",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/_current_review_period.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/_last_review_period.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/devise/sessions/new.html.erb",
		"/Users/jbasirico/github/whetstone/app/controllers/welcome_controller.rb",
		"/Users/jbasirico/github/whetstone/app/views/goals/past.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/project_reviews/_project_template.html.erb",
		"/Users/jbasirico/github/whetstone/app/controllers/goals_controller.rb",
		"/Users/jbasirico/github/whetstone/app/controllers/employee_reviews_controller.rb",
		"/Users/jbasirico/github/whetstone/app/views/welcome/okr.html.md",
		"/Users/jbasirico/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/jbasirico/github/whetstone/app/views/welcome/logs.html.erb",
		"/Users/jbasirico/github/whetstone/app/helpers/welcome_helper.rb",
		"/Users/jbasirico/github/whetstone/app/views/users/index.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/_current_review_period",
		"/Users/jbasirico/github/whetstone/app/models/user.rb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/_most_recent_reviews.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/layouts/application.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/_employee_review_template.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/review.html.erb",
		"/Users/jbasirico/github/whetstone/app/models/employee_review.rb",
		"/Users/jbasirico/github/whetstone/app/assets/stylesheets/welcome.css.scss",
		"/Users/jbasirico/github/whetstone/app/views/welcome/change_log.html.md",
		"/Users/jbasirico/github/whetstone/app/views/goals/_goal_buttons.html.erb",
		"/Users/jbasirico/github/whetstone/app/assets/stylesheets/logs.css.scss",
		"/Users/jbasirico/github/whetstone/config/routes.rb",
		"/Users/jbasirico/github/whetstone/app/views/goals/review_past.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/show.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/project_reviews/show.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_okr.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_legacy.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/welcome/index.html.erb",
		"/Users/jbasirico/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/jbasirico/github/whetstone/app/views/goals/review.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_rating.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/employee_reviews/_form.html.erb",
		"/Users/jbasirico/github/whetstone/app/controllers/project_reviews_controller.rb",
		"/Users/jbasirico/github/whetstone/app/views/project_reviews/_form.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/index.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/edit.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_okr_short.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_short.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_reviewer_comments.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/new.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_legacy_form.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_show_legacy_goal.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_form.html.erb",
		"/Users/jbasirico/github/whetstone/app/views/goals/_goal_template.html.erb",
		"/Users/jbasirico/github/whetstone/db/migrate/20140711192712_add_goal_type_to_goals.rb",
		"/Users/jbasirico/github/whetstone/db/migrate/20140711192712_add_type_to_goals.rb",
		"/Users/jbasirico/Library/Application Support/Sublime Text 3/Packages/BeautifyRuby/BeautifyRuby.sublime-settings",
		"/Users/jbasirico/github/whetstone/config/initializers/inflections.rb",
		"/Users/jbasirico/github/whetstone/app/views/devise/mailer/confirmation_instructions.html.erb",
		"/Users/jbasirico/github/whetstone/bin/sass-convert",
		"/Users/jbasirico/github/whetstone/config/initializers/filter_parameter_logging.rb",
		"/Users/jbasirico/github/whetstone/log/production.log",
		"/Users/jbasirico/github/whetstone/db/migrate/20140101231759_add_se_sse_pse_act_to_engagements.rb",
		"/Users/jbasirico/github/whetstone/Rakefile",
		"/Users/jbasirico/github/whetstone/README.md",
		"/Users/jbasirico/Library/Application Support/Sublime Text 3/Packages/User/BeautifyRuby.sublime-settings",
		"/Users/jbasirico/github/whetstone/app/views/welcome/markdown.html.erb",
		"/Users/jbasirico/github/whetstone/app/controllers/engagements_controller.rb",
		"/Users/jbasirico/github/whetstone/app/assets/javascripts/employee_reviews.js.coffee",
		"/Users/jbasirico/github/whetstone/app/views/welcome/change_log.html.erb",
		"/Users/jbasirico/github/whetstone/app/assets/javascripts/goals.js.coffee",
		"/Users/jbasirico/github/whetstone/app/views/project_reviews/index.html.erb",
		"/Users/jbasirico/github/whetstone/app/models/engagement.rb",
		"/Users/jbasirico/github/whetstone/app/models/project_review.rb"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"<div",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"update_item",
			"puts",
			"@session_id",
			"@second_item",
			"@first_item",
			"@new_list",
			"HTTP_session_id",
			"HTTP_@session_id",
			"session_id",
			"second_item",
			"first_item",
			"new_list",
			"facebook.net",
			"http://localhost:3000",
			"&",
			"css.map",
			"pluralize",
			"most_recent_employee_review",
			"full_name",
			"end",
			"Not required for template or sticky footer method",
			"container",
			"classname",
			"goal.status",
			"'new'",
			"new_goal_path",
			"p>",
			"<p",
			"overall",
			"goal",
			"is_finished?",
			"employee_finished",
			"recently_closed",
			"Goal",
			"objective",
			"employee_review_template",
			"noticeSele",
			".title",
			"title",
			".title",
			"dates",
			"\"",
			"format.json",
			"employee_review_template",
			" goal",
			"png",
			".png",
			"goal.status",
			"status",
			"goal.status",
			"text_area",
			"production",
			"force_ssl",
			"goal_params",
			"crumpetshop",
			"whetstone_session",
			"http",
			"json",
			"assets",
			"out",
			"is_reviewer?",
			"goal_params",
			"engagement",
			"</dd>\n      </dl>",
			"</dt>\n        <dd>",
			"<dl class=\"dl-horizontal\">\n        <dt>",
			"</p>",
			"</strong>",
			"<p><strong>",
			"<br />",
			"<td>",
			"</td>",
			"<td>",
			"+k",
			"Description",
			"importance",
			"description",
			"goal_template",
			"is_reviewer",
			".is_reviewer",
			".is_reviewer?",
			".select(",
			"file",
			"data",
			"sign",
			"xs",
			"notice",
			"class=\"field\"",
			"<br>",
			"@employee_review",
			"goal.",
			"class=\"field\"",
			">\n",
			"class=\"field\"",
			"field",
			":class=",
			"<br>",
			"f.select",
			"<br>",
			"Project",
			"-",
			"st-int",
			"-",
			"<br>",
			"clearance",
			"SawSharpener",
			"ssb-scoring",
			"update_passed",
			"control-group",
			"<i class=",
			"<i ",
			"create",
			"gly",
			"120",
			"url",
			"font-size",
			"body",
			"line-height",
			"pull",
			"large",
			"body",
			"\\nbody",
			" body",
			"body",
			"jbasirico@",
			"jbasirico",
			"Write-up",
			"pdf"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"update_user",
			"session_id",
			"second_item",
			"first_item",
			"new_list",
			"HTTP_SESSION_ID",
			"@session_id",
			"@second_item",
			"@first_item",
			"@new_list",
			"",
			"&amp;",
			"current_review",
			"div>",
			"employee_review_template_short",
			".pretty_title",
			"'",
			"@engagement",
			"<br />",
			": </strong> ",
			"<strong>",
			"</dd>\n</dl>",
			"</dt>\n  <dd>",
			"<dl class=\"dl-horizontal\">\n  <dt>",
			"</p>",
			"<p><strong></strong>",
			"<br />",
			"",
			".number_field ",
			"md",
			"class=\"form-group\"",
			"<br />",
			"employee_review",
			"@goal.",
			"class=\"form-group\"",
			"form-group",
			":class=>",
			"<br />",
			"_",
			"<br />",
			"form-group",
			"medium",
			"exam",
			"@best_exam",
			"@exam",
			"'$1',  ",
			"admin",
			"@admins",
			"SSB_Arch",
			"exam",
			"exam.",
			"",
			"user",
			"/assets/SSB_arch/",
			"<p>",
			"",
			"<$1>",
			"<div>",
			"Write-Up",
			"e",
			"<li>",
			"e",
			"\\r",
			"VALUES \\(",
			"\\[Pages\\] \\(",
			"Values \\(",
			"\\[News\\] \\(",
			"",
			"/img/",
			"assets",
			"sp",
			"aa",
			"id",
			"fp",
			"\\n   - ",
			"\\n - ",
			"<a href=\\\"http://en.wikipedia.org/wiki/$1\\\"",
			"",
			"NOT NULL AUTO_INCREMENT",
			"int",
			"",
			"\\n",
			"\\r",
			"'",
			"\\n",
			"",
			"@highlightColor",
			"\"",
			">\\r\\n",
			">\\r",
			"url('assets/fonts/",
			"url('fonts/",
			"assets/bootstrap/",
			"bootstrap/",
			"bootstrap",
			"/bootstrap",
			"bootstrap",
			"''"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/controllers/items_controller.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3354,
						"regions":
						{
						},
						"selection":
						[
							[
								743,
								743
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 303.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "spec/requests/lists_spec.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14544,
						"regions":
						{
						},
						"selection":
						[
							[
								393,
								393
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "spec/rails_helper.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1806,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/models/user.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1253,
						"regions":
						{
						},
						"selection":
						[
							[
								1233,
								1233
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 140.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/models/item.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 371,
						"regions":
						{
						},
						"selection":
						[
							[
								255,
								255
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "config/routes.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2226,
						"regions":
						{
						},
						"selection":
						[
							[
								413,
								413
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/views/welcome/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25478,
						"regions":
						{
						},
						"selection":
						[
							[
								945,
								945
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "dataGen/main.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7582,
						"regions":
						{
						},
						"selection":
						[
							[
								2093,
								2093
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 207.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "dataGen/perf_test.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4040,
						"regions":
						{
						},
						"selection":
						[
							[
								2952,
								2952
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1300.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "app/controllers/application_controller.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 209,
						"regions":
						{
						},
						"selection":
						[
							[
								164,
								164
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 37.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "coreAPI.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 194.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
