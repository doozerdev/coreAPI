worker_processes  1;
events {
    worker_connections  1024;
}


http {

    log_format compression '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    passenger_root /home/ec2-user/.rvm/gems/ruby-2.2.1/gems/passenger-5.0.16;
    passenger_ruby /home/ec2-user/.rvm/gems/ruby-2.2.1/wrappers/ruby;

    include       mime.types;
    default_type  application/octet-stream;
    
    sendfile        on;
    keepalive_timeout  65;

    # don't send the nginx version number
    server_tokens off;

    # don't allow to be embedded (clickjacking)
    add_header X-Frame-Options SAMEORIGIN;
    # tell the browser not to sniff contnet type
    add_header X-Content-Type-Options nosniff;
    # (re)enable xss protection in the browser
    add_header X-XSS-Protection "1; mode=block";

    # TODO: Enable CSP, but need to test this doesn't break the client.

    ###############################
    ###############################
    ## PRODUCTION Server Configs
    ## Holy shit, this is prod, don't fuck this up.
    ## Test on test or beta
    ## Prod is exposed to all public users
    ##   and points to the production database
    ###############################
    ###############################

    ##Production coreAPI
    server {
        listen       80;
        listen       443 ssl;
        server_name  api.doozer.tips;

        error_log /usr/share/nginx/logs/prod-coreAPI-error.log;
        access_log /usr/share/nginx/logs/prod-coreAPI-access.log;

        #certs, first one is primary and intermediate certs
        ssl_certificate      /usr/share/nginx/doozer_prod/keys/doozersslbundle.crt;
        ssl_certificate_key  /usr/share/nginx/doozer_prod/keys/doozersslkey.key;
        #Diffie-Hellman ephemeral key exchange cert
        ssl_dhparam /usr/share/nginx/doozer_prod/keys/dhparam.pem;
        #enable session resumption for performance
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout  5m;
        #disable everything before TLSv1
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        #EDH and secure ciphers
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers  on;
        #TODO: OSCP Stapling
        #TODO: HSTS 


        rails_env production;
        root /usr/share/nginx/doozer_prod/coreAPI/public;

        passenger_enabled on;
        passenger_ruby /home/ec2-user/.rvm/gems/ruby-2.2.1/wrappers/ruby;
    }


    ###############################
    ## BETA Server Configs
    ## Beta is exposed to our beta users
    ##   and points to the produciton database
    ###############################
    
    ##Beta NgFrontEnd
    server {
        listen 80;
        server_name beta.doozer.tips;

        error_log /usr/share/nginx/logs/beta-NgFrontEnd-error.log;
        access_log /usr/share/nginx/logs/beta-NgFrontEnd-access.log;

        location / {
          root /usr/share/nginx/doozer_beta/NgFrontEnd/dist;
          index index.html;
        }

    }

    ##Beta coreAPI
    server {
        listen       80;
        server_name  api.beta.doozer.tips;

        error_log /usr/share/nginx/logs/beta-coreAPI-error.log;
        access_log /usr/share/nginx/logs/beta-coreAPI-access.log;

        rails_env production;
        root /usr/share/nginx/doozer_beta/coreAPI/public;

        passenger_enabled on;
        passenger_ruby /home/ec2-user/.rvm/gems/ruby-2.2.1/wrappers/ruby;
    }


    ###############################
    ## TEST Server Configs
    ## Test is exposed to our a very select (crazy) set of users
    ##   and points to the test database
    ###############################

    ##Test NgFrontEnd
    server {
        listen 80;
        server_name test.doozer.tips;

        error_log /usr/share/nginx/logs/test-NgFrontEnd-error.log;
        access_log /usr/share/nginx/logs/test-NgFrontEnd-access.log;

        location / {
          root /usr/share/nginx/doozer_test/NgFrontEnd/dist;
          index index.html;
        }

    }

    ##Test coreAPI
    server {
        listen       80;
        server_name  api.test.doozer.tips;

        error_log /usr/share/nginx/logs/test-coreAPI-error.log;
        access_log /usr/share/nginx/logs/test-coreAPI-access.log;

        rails_env test;
        root /usr/share/nginx/doozer_test/coreAPI/public;

        passenger_enabled on;
        passenger_ruby /home/ec2-user/.rvm/gems/ruby-2.2.1/wrappers/ruby;
    }

    ################################
    # Redirect all http to https
    # don't enable this until we have certs for all the things
    # server {
    #   listen 80;
    #   server_name _;
    #   return 301 https://$host$request_uri;
    # }
}